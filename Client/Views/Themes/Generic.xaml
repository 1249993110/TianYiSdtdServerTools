<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:localConverters="clr-namespace:TianYiSdtdServerTools.Client.Views.Converters"
    xmlns:iceCtrl="clr-namespace:IceCoffee.Wpf.CustomControlLibrary.Controls;assembly=IceCoffee.Wpf.CustomControlLibrary"
    xmlns:pu="clr-namespace:Panuon.UI.Silver;assembly=Panuon.UI.Silver"
    xmlns:converters="clr-namespace:IceCoffee.Wpf.CustomControlLibrary.Converters;assembly=IceCoffee.Wpf.CustomControlLibrary">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SdtdServerTools;component/Themes/Button.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/SdtdServerTools;component/Themes/TabControl.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/SdtdServerTools;component/Themes/ListBox.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/SdtdServerTools;component/Themes/ComboBox.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="LabelStyleBase" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource LabelStyleBase}">
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>        
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Width" Value="100"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Height" Value="25"></Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Setter Property="Height" Value="25"></Setter>
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="Background" Value="#393A3C"/>
        <Setter Property="Foreground" Value="#AFAFAF"/>
        <Setter Property="Padding" Value="0 4"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>
    
    <Style TargetType="{x:Type Paragraph}">
        <Setter Property="Margin" Value="0"/>
        <!--<Setter Property="LineHeight" Value="20"/>-->
    </Style>
    
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="pu:DataGridHelper.HoverBackground" Value="#F0F0F0"/>
        <Setter Property="pu:DataGridHelper.SelectedBackground" Value="#EEE8AA"/>
    </Style>

    <Style x:Key="WrapTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Background" Value="#393A3C"/>
        <Setter Property="Foreground" Value="#AFAFAF"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="AcceptsReturn" Value="True"/>
    </Style>    

    <localConverters:DataGridEventArgsConverter x:Key="DataGridEventArgsConverter"></localConverters:DataGridEventArgsConverter>


    <Style TargetType="{x:Type iceCtrl:SerialDataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}"/>

</ResourceDictionary>
